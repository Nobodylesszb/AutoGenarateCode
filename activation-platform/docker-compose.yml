# Docker Compose 配置文件

version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15
    container_name: activation_platform_db
    environment:
      POSTGRES_DB: activation_platform
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - activation_platform_network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: activation_platform_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - activation_platform_network

  # 后端 API 服务
  backend:
    build: ./backend
    container_name: activation_platform_backend
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/activation_platform
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    networks:
      - activation_platform_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # 前端服务
  frontend:
    build: ./frontend
    container_name: activation_platform_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - activation_platform_network
    command: npm run dev

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: activation_platform_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - activation_platform_network

volumes:
  postgres_data:
  redis_data:

networks:
  activation_platform_network:
    driver: bridge
