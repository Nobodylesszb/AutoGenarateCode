---
alwaysApply: true
description: 通用编码标准和最佳实践
---

# 编码标准

## 代码风格
- 使用 2 个空格进行缩进
- 使用分号结束语句
- 使用单引号而不是双引号
- 行尾不要有多余的空格
- 文件末尾保留一个空行

## 命名规范
- 变量和函数使用 camelCase: `userName`, `getUserData`
- 常量使用 UPPER_SNAKE_CASE: `API_BASE_URL`
- 类名使用 PascalCase: `UserService`
- 文件名使用 kebab-case: `user-service.ts`

## 注释规范
- 为复杂的业务逻辑添加注释
- 使用 JSDoc 格式为函数添加文档注释
- 避免显而易见的注释
- 注释应该解释"为什么"而不是"是什么"

## 错误处理
- 始终处理可能的错误情况
- 使用 try-catch 处理异步操作
- 提供有意义的错误信息
- 避免静默忽略错误

## 性能考虑
- 避免不必要的重复计算
- 使用适当的数据结构
- 考虑内存使用情况
- 优化关键路径的性能

## 安全性
- 验证所有用户输入
- 避免在客户端存储敏感信息
- 使用 HTTPS 进行数据传输
- 实施适当的访问控制