---
alwaysApply: true
description: 项目结构和组织指导
---

# 项目结构指导

## 目录组织原则
- 使用功能模块化的目录结构
- 保持目录层次清晰，避免过深的嵌套
- 相关文件应该放在同一个目录下

## 推荐目录结构
```
src/
├── components/          # 可复用组件
├── pages/              # 页面组件
├── hooks/              # 自定义 React Hooks
├── utils/              # 工具函数
├── services/           # API 服务
├── types/              # TypeScript 类型定义
├── constants/          # 常量定义
├── assets/             # 静态资源
└── styles/             # 样式文件
```

## 文件命名规范
- 组件文件使用 PascalCase: `UserProfile.tsx`
- 工具函数使用 camelCase: `formatDate.ts`
- 常量文件使用 UPPER_SNAKE_CASE: `API_ENDPOINTS.ts`
- 样式文件使用 kebab-case: `user-profile.css`

## 导入顺序
1. React 相关导入
2. 第三方库导入
3. 内部模块导入
4. 类型导入
5. 样式导入

## 代码组织
- 每个文件应该只负责一个主要功能
- 大型组件应该拆分为更小的子组件
- 相关的工具函数应该放在同一个文件中